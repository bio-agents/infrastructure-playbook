---
condor:
  limits:
    cores: 40
    mem: 1000
  env: {}
  params:
    priority: -{PRIORITY}
    request_cpus: '{PARALLELISATION}'
    request_memory: '{MEMORY}'
    tmp_dir: 'True'

condor_singularity:
  limits:
    cores: 40
    mem: 1000
  env: {}
  params:
    priority: -{PRIORITY}
    request_cpus: '{PARALLELISATION}'
    request_memory: '{MEMORY}'
    singularity_enabled: true
    # can and should be made stricter at some point
    singularity_volumes: '/data/dnb01/galaxy_db/:ro,/data/dnb02/galaxy_db/:ro,/data/0/galaxy_import/galaxy_user_data/:ro,/data/1/galaxy_import/galaxy_user_data/:ro,/data/2/galaxy_db/:ro,/data/3/galaxy_db/:ro,/data/4/galaxy_db/:ro,/data/5/galaxy_import/galaxy_user_data/:ro,/data/6/galaxy_db/:ro,/data/7/galaxy_db/:ro,$galaxy_root:ro,$agent_directory:ro,$working_directory:rw,$job_directory:rw,/data/db/:ro'
    singularity_default_container_id: '/data/0/cvmfs/singularity/ubuntu:18.04'
    singularity_run_extra_arguments: '-H /usr/local/galaxy/'
    tmp_dir: 'True'

secure_pulsar_singularity:
  env: {}
  params:
    priority: -{PRIORITY}
    request_cpus: '{PARALLELISATION}'
    request_memory: '{MEMORY}'
    singularity_enabled: true
    singularity_default_container_id: '/data/0/cvmfs/singularity/ubuntu:18.04'

#condor_singularity_with_conda:
#  env: {}
#  params:
#    priority: -{PRIORITY}
#    request_cpus: '{PARALLELISATION}'
#    request_memory: '{MEMORY}'
#    singularity_enabled: true
#    # can and should be made stricter at some point
#    #singularity_volumes: '/data/dnb01/galaxy_db/:ro,/data/dnb02/galaxy_db/:ro,/data/0/galaxy_import/galaxy_user_data/:ro,/data/1/galaxy_import/galaxy_user_data/:ro,/data/2/galaxy_db/:ro,/data/3/galaxy_db/:ro,/data/4/galaxy_db/:ro,/data/$
#    #singularity_default_container_id: '/data/0/cvmfs/singularity/ubuntu:18.04'
#    #singularity_run_extra_arguments: '-H /usr/local/galaxy/'
#    tmp_dir: 'True'
#    containers:
#      container: &quot;/data/0/cvmfs/singularity/python:2.7.12--1&quot;
#      type: singularity
#      shell: /bin/bash/
#      resolve_dependencies: true

remote_cluster_mq_cz:
  env: {}
  params:
    priority: -{PRIORITY}
    request_cpus: '{PARALLELISATION}'
    request_memory: '{MEMORY}'
    jobs_directory: '/storage/brno11-iechor/home/galaxyeu/galaxy-staging/'
    dependency_resolution: 'remote'
    submit_user: 'galaxy'

remote_cluster_mq_test:
  env: {}
  params:
    priority: -{PRIORITY}
    request_cpus: '{PARALLELISATION}'
    request_memory: '{MEMORY}'
    jobs_directory: '/data/share/stage/'
    dependency_resolution: 'remote'

condor_docker:
  env:
    # this can be removed, as soon as we don't expose this env on cn029 anymore
    DOCKER_HOST: ''
  params:
    priority: -{PRIORITY}
    request_cpus: '{PARALLELISATION}'
    request_memory: '{MEMORY}'
    docker_enabled: true
    # can and should be made stricter at some point
    docker_volumes: '/data/dnb01/galaxy_db/:ro,/data/dnb02/galaxy_db/:ro,/data/0/galaxy_import/galaxy_user_data/:ro,/data/1/galaxy_import/galaxy_user_data/:ro,/data/2/galaxy_db/:ro,/data/3/galaxy_db/:ro,/data/4/galaxy_db/:ro,/data/5/galaxy_import/galaxy_user_data/:ro,/data/6/galaxy_db/:ro,/data/7/galaxy_db/:ro,$galaxy_root:ro,$agent_directory:ro,$working_directory:rw,$job_directory:rw,/data/db/:ro'
    docker_memory: '{MEMORY}'
    docker_auto_rm: true
    docker_default_container_id: busybox:ubuntu-14.04
    docker_sudo: false
    docker_set_user: ''
    tmp_dir: 'True'
sge:
  env: {}
  params:
    nativeSpecification: |
        -p -{PRIORITY}
        -l galaxy1_slots=1
        -l h_vmem={MEMORY}
        {NATIVE_SPEC_EXTRA}
        {PARALLELISATION}
        -v _JAVA_OPTIONS
        -v TEMP
        -v TMPDIR
        -v PATH
        -v PYTHONPATH
        -v LD_LIBRARY_PATH
        -v XAPPLRESDIR
        -v GDFONTPATH
        -v GNUPLOT_DEFAULT_GDFONT
        -v MPLCONFIGDIR
        -soft
        -l galaxy1_dedicated=1

remote_cluster_mq_be01:
  limits:
    cores: 8
    mem: 15
  env:
    GALAXY_MEMORY_MB: '{MEMORY_MB}'
    GALAXY_SLOTS: '{PARALLELISATION}'
    LC_ALL: C
  params:
    priority: -{PRIORITY}
    submit_request_cpus: '{PARALLELISATION}'
    submit_request_memory: '{MEMORY}'
    jobs_directory: '/data/share/staging'
    default_file_action: 'remote_transfer'
    dependency_resolution: 'remote'
    outputs_to_working_directory: False
    rewrite_parameters: True
    transport: 'curl'

remote_cluster_mq_de01:
  limits:
    cores: 16
    mem: 31
  env:
    GALAXY_MEMORY_MB: '{MEMORY_MB}'
    GALAXY_SLOTS: '{PARALLELISATION}'
    LC_ALL: C
    SINGULARITY_CACHEDIR: /data/share/var/database/container_cache
  params:
    priority: -{PRIORITY}
    submit_request_cpus: '{PARALLELISATION}'
    submit_request_memory: '{MEMORY}'
    jobs_directory: '/data/share/staging'
    default_file_action: 'remote_transfer'
    dependency_resolution: 'none'
    outputs_to_working_directory: False
    rewrite_parameters: True
    transport: 'curl'
    singularity_enabled: true
    singularity_default_container_id: '/cvmfs/singularity.galaxyproject.org/u/b/ubuntu:18.04'
    metadata_strategy: 'directory'

remote_cluster_mq_de02:
  ## our singularity test bed
  limits:
    cores: 16
    mem: 31
  env:
    GALAXY_MEMORY_MB: '{MEMORY_MB}'
    GALAXY_SLOTS: '{PARALLELISATION}'
    LC_ALL: C
  params:
    priority: -{PRIORITY}
    submit_request_cpus: '{PARALLELISATION}'
    submit_request_memory: '{MEMORY}'
    jobs_directory: '/data/share/staging'
    default_file_action: 'remote_transfer'
    # dependency_resolution: 'remote'  --> we should enable it and test the difference, I don't think it has an effect
    singularity_enabled: true
    singularity_default_container_id: '/data/0/singularity/ubuntu:18.04'
    tmp_dir: 'True'
    outputs_to_working_directory: False
    rewrite_parameters: True
    transport: 'curl'

remote_cluster_mq_de03:
  limits:
    cores: 8
    mem: 19
    gpu: 1
  env:
    GALAXY_MEMORY_MB: '{MEMORY_MB}'
    GALAXY_SLOTS: '{PARALLELISATION}'
    LC_ALL: C
  params:
    priority: -{PRIORITY}
    submit_request_cpus: '{PARALLELISATION}'
    submit_request_memory: '{MEMORY}'
    submit_request_gpus: '{GPUS}'
    jobs_directory: '/data/share/staging'
    default_file_action: 'remote_transfer'
    dependency_resolution: 'remote'
    outputs_to_working_directory: False
    rewrite_parameters: True
    transport: 'curl'

remote_cluster_mq_it01:
  limits:
    cores: 16
    mem: 31
  env:
    GALAXY_MEMORY_MB: '{MEMORY_MB}'
    GALAXY_SLOTS: '{PARALLELISATION}'
    LC_ALL: C
  params:
    priority: -{PRIORITY}
    submit_request_cpus: '{PARALLELISATION}'
    submit_request_memory: '{MEMORY}'
    jobs_directory: '/data/share/staging'
    default_file_action: 'remote_transfer'
    dependency_resolution: 'remote'
    outputs_to_working_directory: False
    rewrite_parameters: True
    transport: 'curl'
    metadata_strategy: 'directory'

remote_cluster_mq_pt01:
  limits:
    cores: 4
    mem: 15
  env:
    GALAXY_MEMORY_MB: '{MEMORY_MB}'
    GALAXY_SLOTS: '{PARALLELISATION}'
    LC_ALL: C
  params:
    priority: -{PRIORITY}
    submit_request_cpus: '{PARALLELISATION}'
    submit_request_memory: '{MEMORY}'
    jobs_directory: '/data/share/staging'
    default_file_action: 'remote_transfer'
    dependency_resolution: 'remote'
    outputs_to_working_directory: False
    rewrite_parameters: True
    transport: 'curl'

remote_cluster_mq_uk01:
  limits:
    cores: 60
    mem: 300
  env:
      GALAXY_MEMORY_MB: '{MEMORY_MB}'
      GALAXY_SLOTS: '{PARALLELISATION}'
      LC_ALL: C
      SINGULARITY_CACHEDIR: /data/share/var/database/container_cache
  params:
    priority: -{PRIORITY}
    submit_request_cpus: '{PARALLELISATION}'
    submit_request_memory: '{MEMORY}'
    jobs_directory: '/data/share/staging'
    default_file_action: 'remote_transfer'
    dependency_resolution: 'none'
    outputs_to_working_directory: False
    rewrite_parameters: True
    transport: 'curl'
    singularity_enabled: true
    singularity_default_container_id: '/cvmfs/singularity.galaxyproject.org/u/b/ubuntu:18.04'

remote_cluster_mq_au01:
  limits:
    cores: 16
    mem: 64
  env:
    GALAXY_MEMORY_MB: '{MEMORY_MB}'
    GALAXY_SLOTS: '{PARALLELISATION}'
    LC_ALL: C
  params:
    nativeSpecification: |
        --ntasks={PARALLELISATION}
        --nodes=1
        --ntasks-per-node={PARALLELISATION}
        --mem={MEMORY}
    dependency_resolution: 'remote'
    jobs_directory: '/mnt/pulsar/files/staging'
    default_file_action: 'remote_transfer'
