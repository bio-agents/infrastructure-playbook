- name: Creates sentry config / data directory
  file: path=/opt/sentry/ state=directory

- name: Copy configuration file
  template:
    src: config.yml
    dest: /opt/sentry/config.yml
    owner: root
    group: root
    mode: 0644

- name: Copy sentry.conf.py file
  template:
    src: sentry.conf.py
    dest: /opt/sentry/sentry.conf.py
    owner: root
    group: root
    mode: 0644

- name: Copy Dockerfile
  template:
    src: Dockerfile
    dest: /opt/sentry/Dockerfile
    owner: root
    group: root
    mode: 0644

- name: Sentry docker-compose services
  docker_service:
    project_name: sentry
    definition:
      version: '2'
      services:
        base:
          restart: always
          build: .
          environment:
            SENTRY_MEMCACHED_HOST: memcached
            SENTRY_REDIS_HOST: redis
            SENTRY_POSTGRES_HOST: postgres
            SENTRY_EMAIL_HOST: smtp
            GITHUB_APP_ID: "{{ github_app_id }}"
            GITHUB_API_SECRET: "{{ github_api_secret }}"
            SENTRY_SECRET_KEY: "{{ sentry_secret_key }}"
          volumes:
            - ./data/sentry:/var/lib/sentry/files
        smtp:
          restart: always
          image: tianon/exim4
        memcached:
          restart: always
          image: memcached:1.4
        redis:
          restart: always
          image: redis:3.2-alpine
        postgres:
          restart: always
          image: postgres:9.5
          volumes:
            - ./data/postgres:/var/lib/postgresql/data
        web:
          restart: always
          extends: base
          links:
            - redis
            - postgres
            - memcached
            - smtp
          ports:
            - '9000:9000'
          environment:
            GITHUB_APP_ID: "{{ github_app_id }}"
            GITHUB_API_SECRET: "{{ github_api_secret }}"
            SENTRY_SECRET_KEY: "{{ sentry_secret_key }}"
        cron:
          restart: always
          extends: base
          command: run cron
          links:
            - redis
            - postgres
            - memcached
            - smtp
        worker:
          restart: always
          extends: base
          command: run worker
          links:
            - redis
            - postgres
            - memcached
            - smtp
