---
- name: Install useful agent
  package:
    name: "git"
    state: latest
    update_cache: yes

- name: "ensure sentry user part of docker group"
  user:
    name: "{{ hxr_sentry_user }}"
    groups: docker
    append: yes

- name: reset ssh connection to allow user changes to affect 'current login user'
  meta: reset_connection

- name: "Make data dir"
  file:
    dest: "{{ hxr_sentry_datadir }}"
    owner: "{{ hxr_sentry_user }}"
    group: "{{ hxr_sentry_group }}"
    mode: 0750
    state: directory

- name: "Make postgres data dir"
  file:
    dest: "{{ hxr_sentry_datadir }}/postgres"
    owner: "{{ hxr_sentry_user }}"
    group: "{{ hxr_sentry_group }}"
    mode: 0700
    state: directory

- name: "Make sentry data dir"
  file:
    dest: "{{ hxr_sentry_datadir }}/sentry"
    owner: "{{ hxr_sentry_user }}"
    group: "{{ hxr_sentry_group }}"
    mode: 0700
    state: directory

- name: "Make repo dir"
  file:
    dest: "{{ hxr_sentry_repodir }}"
    owner: "{{ hxr_sentry_user }}"
    group: "{{ hxr_sentry_group }}"
    mode: 0750
    state: directory

- name: "Clone repository"
  become: true
  become_user: "{{ hxr_sentry_user }}"
  git:
    repo: 'https://github.com/getsentry/onpremise'
    dest: "{{ hxr_sentry_repodir }}"
    version: "{{ hxr_sentry_version }}"
    force: true

- name: Template config files
  become: true
  become_user: "{{ hxr_sentry_user }}"
  template:
    src: "{{ item }}.j2"
    dest: "{{ hxr_sentry_repodir }}/{{ item }}"
    owner: "{{ hxr_sentry_user }}"
    group: "{{ hxr_sentry_group }}"
    mode: 0640
  with_items:
    - config.yaml
    - docker-compose.yml
    - Dockerfile
    - requirements.txt

- name: "Build sentry image"
  command: make
  become: true
  become_user: "{{ hxr_sentry_user }}"
  args:
    chdir: "{{ hxr_sentry_repodir }}"

- name: "Pull dependencies"
  command: docker-compose pull postgres redis smtp memcached
  become: true
  become_user: "{{ hxr_sentry_user }}"
  args:
    chdir: "{{ hxr_sentry_repodir }}"

- name: "Kill any existing containers"
  command: docker-compose kill
  become: true
  become_user: "{{ hxr_sentry_user }}"
  args:
    chdir: "{{ hxr_sentry_repodir }}"

- name: "Remove existing conatiners"
  command: docker-compose rm -f
  become: true
  become_user: "{{ hxr_sentry_user }}"
  args:
    chdir: "{{ hxr_sentry_repodir }}"

- name: "Bring up containers"
  command: docker-compose up -d
  become: true
  become_user: "{{ hxr_sentry_user }}"
  args:
    chdir: "{{ hxr_sentry_repodir }}"

- command: sleep 10

- name: "Migrate"
  command: docker-compose exec -T web sentry upgrade --noinput
  become: true
  become_user: "{{ hxr_sentry_user }}"
  args:
    chdir: "{{ hxr_sentry_repodir }}"

- name: "Create admin user"
  command: docker-compose exec -T web sentry createuser --email admin@local.host --password password --superuser
  become: true
  become_user: "{{ hxr_sentry_user }}"
  ignore_errors: yes
  args:
    chdir: "{{ hxr_sentry_repodir }}"
